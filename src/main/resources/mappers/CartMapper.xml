<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.pd.mappers.ICartMapper">
    <delete id="deleteCart" parameterType="com.example.pd.entities.cart.CartEntity">
        DELETE
        FROM `pfad`.`carts`
        WHERE `product_index` = #{productIndex}
          AND `user_id` = #{userId}
        LIMIT 1
    </delete>

    <delete id="deleteCartAll"
            parameterType="com.example.pd.interfaces.IUser">
        DELETE
        FROM `pfad`.`carts`
        WHERE `user_id` = #{userId}
    </delete>

    <delete id="deleteOrder"
            parameterType="com.example.pd.entities.cart.OrderEntity">
        DELETE
        FROM `pfad`.`order`
        WHERE pfad.`order`.`productIndex` = #{productIndex}
        AND pfad.`order`.`orderCode` = #{orderCode}
        AND pfad.`order`.`userId` = #{userId}
        LIMIT 1
    </delete>

    <insert id="insertOrder"
            parameterType="com.example.pd.entities.cart.OrderEntity">
        INSERT INTO `pfad`.`order` (`orderCode`, `thumbnail`, `productIndex`, `productName`, `stock`, `price`, `userId`,
                                    `name`,
                                    `addressPostal`,
                                    `addressPrimary`, `addressSecondary`, `contactFirst`, `contactSecond`,
                                    `contactThird`)
        VALUES (#{orderCode}, #{thumbnail}, #{productIndex}, #{productName}, #{stock}, #{price}, #{userId}, #{name},
                #{addressPostal},
                #{addressPrimary},
                #{addressSecondary}, #{contactFirst}, #{contactSecond}, #{contactThird})

    </insert>

    <select id="selectCountCarts"
            parameterType="com.example.pd.entities.cart.CartEntity"
            resultType="_int">
        SELECT COUNT(0)
        FROM `pfad`.`carts`
        WHERE `user_id` = #{userId}
    </select>

    <select id="selectCarts"
            parameterType="com.example.pd.interfaces.IUser"
            resultType="com.example.pd.vos.cart.CartReadVo">
        SELECT `carts`.`product_index` AS `productIndex`,
               `carts`.`user_id`       AS `userId`,
               `carts`.`stock`         AS `stock`,
               `products`.`name`       AS `productName`,
               `products`.`stock`      AS `stock`,
               `products`.`price`      AS `price`,
               `products`.`thumbnail`  AS `thumbnail`
        FROM `pfad`.`carts` AS `carts`
                 JOIN `pfad`.`products` AS `products` ON `carts`.`product_index` = `products`.`index`
        WHERE `user_id` = #{userId}
        ORDER BY `carts`.`created_at`
    </select>

    <select id="selectOrder"
            parameterType="com.example.pd.interfaces.IUser"
            resultType="com.example.pd.entities.cart.OrderEntity">
        SELECT `index`            AS `index`,
               `orderCode`        AS `orderCode`,
               `productIndex`     AS `productIndex`,
               `productName`      AS `productName`,
               `stock`            AS `stock`,
               `userId`           AS `userId`,
               `name`             AS `name`,
               `addressPostal`    AS `addressPostal`,
               `addressPrimary`   AS `addressPrimary`,
               `addressSecondary` AS `addressSecondary`,
               `contactFirst`     AS `contactFirst`,
               `contactSecond`    AS `contactSecond`,
               `contactThird`     AS `contactThird`,
               `created_at`       AS `createdAt`
        FROM `pfad`.`order`
        WHERE `order`.`userId` = #{userId}
        AND `orderCode` = #{orderCode}
    </select>

    <select id="selectOrders"
            parameterType="com.example.pd.interfaces.IUser"
            resultType="com.example.pd.entities.cart.OrderEntity">
        SELECT `index`            AS `index`,
               `orderCode`        AS `orderCode`,
               `thumbnail`        AS `thumbnail`,
               `productIndex`     AS `productIndex`,
               `productName`      AS `productName`,
               `stock`            AS `stock`,
               `price`            AS `price`,
               `userId`           AS `userId`,
               `name`             AS `name`,
               `addressPostal`    AS `addressPostal`,
               `addressPrimary`   AS `addressPrimary`,
               `addressSecondary` AS `addressSecondary`,
               `contactFirst`     AS `contactFirst`,
               `contactSecond`    AS `contactSecond`,
               `contactThird`     AS `contactThird`,
               `created_at`       AS `createdAt`
        FROM `pfad`.`order` AS `order`
        WHERE `userId` = #{userId}
        ORDER BY `created_at` DESC
    </select>

    <update id="updateCart"
            parameterType="com.example.pd.entities.cart.CartEntity">
        UPDATE `pfad`.`carts`
        SET `stock` = #{stock}
        WHERE `product_index` = #{productIndex}
          AND `user_id` = #{userId}
        LIMIT 1
    </update>

    <update id="updateProductStock"
            parameterType="com.example.pd.entities.cart.OrderEntity">
        UPDATE `pfad`.`products`
        SET `stock` = `stock` - #{stock}
        WHERE `index` = #{productIndex}
        LIMIT 1
    </update>


</mapper>