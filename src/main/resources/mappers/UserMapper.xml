<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.pd.mappers.IUserMapper">
    <delete id="deleteEmailVerification" parameterType="com.example.pd.entities.user.VerificationCodeEntity">
        DELETE
        FROM `pfad`.`verification_codes`
        WHERE `code` = #{code}
    </delete>

    <insert id="insertUser" parameterType="com.example.pd.vos.user.RegisterVo">
        INSERT INTO `pfad`.`users` (`id`, `email`, `password`, `name`,
                                    `birth`, `gender`, `contact_company`,
                                    `contact_first`, `contact_second`, `contact_third`,
                                    `address_postal`, `address_primary`,
                                    `address_secondary`, `sms_marketing_flag`,
                                    `email_marketing_flag`)
        VALUES (#{id}, #{email}, #{hashedPassword}, #{name}, #{birth},
                #{gender}, #{contactCompany}, #{contactFirst}, #{contactSecond},
                #{contactThird}, #{addressPostal}, #{addressPrimary},
                #{addressSecondary}, #{smsMarketing}, #{emailMarketing})
    </insert>

    <insert id="insertVerificationCode" parameterType="com.example.pd.vos.user.RegisterVo">
        <![CDATA[
        INSERT INTO `pfad`.`verification_codes` (`expired_at`, `user_email`, `code`)
        VALUES (DATE_ADD(NOW(), INTERVAL 1 HOUR), #{email}, #{code})
        ]]>
    </insert>

    <select id="selectEmailCount"
            parameterType="string"
            resultType="_int">
        SELECT COUNT(0)
        FROM `pfad`.`users`
        WHERE `id` = #{id}
    </select>

    <select id="selectIdCount"
            parameterType="string"
            resultType="_int">
        SELECT COUNT(0)
        FROM `pfad`.`users`
        WHERE `id` = #{id}
    </select>

    <select id="selectUserByVerificationCode"
            parameterType="com.example.pd.entities.user.VerificationCodeEntity"
            resultType="com.example.pd.entities.user.UserEntity">
        <![CDATA[
        SELECT `user`.`email`                AS `email`,
               `user`.`password`             AS `password`,
               `user`.`created_at`           AS `createdAt`,
               `user`.`updated_at`           AS `updatedAt`,
               `user`.`id`                   AS `id`,
               `user`.`name`                 AS `name`,
               `user`.`birth`                AS `birth`,
               `user`.`gender`               AS `gender`,
               `user`.`contact_company`      AS `contactCompany`,
               `user`.`contact_first`        AS `contactFirst`,
               `user`.`contact_second`       AS `contactSecond`,
               `user`.`contact_third`        AS `contactThird`,
               `user`.`address_postal`       AS `addressPostal`,
               `user`.`address_primary`      AS `addressPrimary`,
               `user`.`address_secondary`    AS `addressSecondary`,
               `user`.`admin_flag`           AS `isAdmin`,
               `user`.`email_verified_flag`  AS `isEmailVerified`,
               `user`.`suspended_flag`       AS `isSuspended`,
               `user`.`deleted_flag`         AS `isDeleted`,
               `user`.`sms_marketing_flag`   AS `isSmsMarketing`,
               `user`.`email_marketing_flag` AS `isEmailMarketing`
        FROM `pfad`.`verification_codes` AS `code`
                 LEFT JOIN `pfad`.`users` AS `user` ON `code`.`user_email` = `user`.`email`
        WHERE `code`.`code` = #{code}
          AND `code`.`created_at` <= NOW()
          AND `code`.`expired_at` >= NOW()
          AND `code`.`expired_flag` = FALSE
        ]]>
    </select>

    <select id="selectUser"
            parameterType="com.example.pd.entities.user.UserEntity"
            resultType="com.example.pd.entities.user.UserEntity">
        SELECT `email`                AS `email`,
               `password`             AS `password`,
               `created_at`           AS `createdAt`,
               `updated_at`           AS `updatedAt`,
               `id`                   AS `id`,
               `name`                 AS `name`,
               `birth`                AS `birth`,
               `gender`               AS `gender`,
               `contact_company`      AS `contactCompany`,
               `contact_first`        AS `contactFirst`,
               `contact_second`       AS `contactSecond`,
               `contact_third`        AS `contactThird`,
               `address_postal`       AS `addressPostal`,
               `address_primary`      AS `addressPrimary`,
               `address_secondary`    AS `addressSecondary`,
               `admin_flag`           AS `isAdmin`,
               `email_verified_flag`  AS `isEmailVerified`,
               `suspended_flag`       AS `isSuspended`,
               `deleted_flag`         AS `isDeleted`,
               `sms_marketing_flag`   AS `isSmsMarketing`,
               `email_marketing_flag` AS `isEmailMarketing`
        FROM `pfad`.`users`
        WHERE `id` = #{id}
          AND `password` = #{hashedPassword}
    </select>

    <select id="selectUserByIdRecover"
            parameterType="com.example.pd.vos.user.IdRecoverVo"
            resultType="com.example.pd.entities.user.UserEntity">
        SELECT `email`                AS `email`,
               `password`             AS `password`,
               `created_at`           AS `createdAt`,
               `updated_at`           AS `updatedAt`,
               `id`                   AS `id`,
               `name`                 AS `name`,
               `birth`                AS `birth`,
               `gender`               AS `gender`,
               `contact_company`      AS `contactCompany`,
               `contact_first`        AS `contactFirst`,
               `contact_second`       AS `contactSecond`,
               `contact_third`        AS `contactThird`,
               `address_postal`       AS `addressPostal`,
               `address_primary`      AS `addressPrimary`,
               `address_secondary`    AS `addressSecondary`,
               `admin_flag`           AS `isAdmin`,
               `email_verified_flag`  AS `isEmailVerified`,
               `suspended_flag`       AS `isSuspended`,
               `deleted_flag`         AS `isDeleted`,
               `sms_marketing_flag`   AS `isSmsMarketing`,
               `email_marketing_flag` AS `isEmailMarketing`
        FROM `pfad`.`users`
        WHERE `email` = #{email}
          AND `name` = #{name}
          AND `birth` = #{birth}
          AND `gender` = #{gender}
          AND `contact_company` = #{contactCompany}
          AND `contact_first` = #{contactFirst}
          AND `contact_second` = #{contactSecond}
          AND `contact_third` = #{contactThird}
          AND `email_verified_flag` = TRUE
          AND `suspended_flag` = FALSE
          AND `deleted_flag` = FALSE
    </select>

    <select id="selectUserByPasswordRecover"
            parameterType="com.example.pd.vos.user.PasswordRecoverVo"
            resultType="com.example.pd.entities.user.UserEntity">
        SELECT `email`                AS `email`,
               `password`             AS `password`,
               `created_at`           AS `createdAt`,
               `updated_at`           AS `updatedAt`,
               `id`                   AS `id`,
               `name`                 AS `name`,
               `birth`                AS `birth`,
               `gender`               AS `gender`,
               `contact_company`      AS `contactCompany`,
               `contact_first`        AS `contactFirst`,
               `contact_second`       AS `contactSecond`,
               `contact_third`        AS `contactThird`,
               `address_postal`       AS `addressPostal`,
               `address_primary`      AS `addressPrimary`,
               `address_secondary`    AS `addressSecondary`,
               `admin_flag`           AS `isAdmin`,
               `email_verified_flag`  AS `isEmailVerified`,
               `suspended_flag`       AS `isSuspended`,
               `deleted_flag`         AS `isDeleted`,
               `sms_marketing_flag`   AS `isSmsMarketing`,
               `email_marketing_flag` AS `isEmailMarketing`
        FROM `pfad`.`users`
        WHERE `id` = #{id}
          AND `email` = #{email}
          AND `name` = #{name}
          AND `birth` = #{birth}
          AND `gender` = #{gender}
          AND `contact_company` = #{contactCompany}
          AND `contact_first` = #{contactFirst}
          AND `contact_second` = #{contactSecond}
          AND `contact_third` = #{contactThird}
          AND `email_verified_flag` = TRUE
          AND `suspended_flag` = FALSE
          AND `deleted_flag` = FALSE
    </select>

    <update id="updateUser" parameterType="com.example.pd.entities.user.UserEntity">
        UPDATE `pfad`.`users`
        SET `email`                = #{email},
            `password`             = #{password},
            `created_at`           = #{createdAt},
            `updated_at`           = NOW(),
            `id`                   = #{id},
            `name`                 = #{name},
            `birth`                = #{birth},
            `gender`               = #{gender},
            `contact_company`      = #{contactCompany},
            `contact_first`        = #{contactFirst},
            `contact_second`       = #{contactSecond},
            `contact_third`        = #{contactThird},
            `address_postal`       = #{addressPostal},
            `address_primary`      = #{addressPrimary},
            `address_secondary`    = #{addressSecondary},
            `admin_flag`           = #{isAdmin},
            `email_verified_flag`  = #{isEmailVerified},
            `suspended_flag`       = #{isSuspended},
            `deleted_flag`         = #{isDeleted},
            `sms_marketing_flag`   = #{isSmsMarketing},
            `email_marketing_flag` = #{isEmailMarketing}
        WHERE `id` = #{id}
        LIMIT 1
    </update>
</mapper>